--------------------------------------------------------------------------------
-- Create tables
--------------------------------------------------------------------------------
CREATE TABLE EMPLOYEE
(
  EMP_ID INT IDENTITY(1,1) PRIMARY KEY,
  EMP_USERNAME NVARCHAR(25) NOT NULL,
  EMP_PASSWORD NVARCHAR(25) NOT NULL,
  EMP_EMAIL NVARCHAR(100) NOT NULL,
  EMP_PHONE INT,
  EMP_F_NAME NVARCHAR(25) NOT NULL,
  EMP_L_NAME NVARCHAR(25) NOT NULL,
  ISADMIN BIT NOT NULL DEFAULT 0,
  UNIQUE (EMP_USERNAME),
  UNIQUE (EMP_EMAIL)
);
GO

CREATE TABLE FAQ
(
  FAQ_ID INT IDENTITY(1,1) PRIMARY KEY,
  FAQ_Q NVARCHAR(MAX) NOT NULL,
  FAQ_A NVARCHAR(MAX) NOT NULL,
);
GO

CREATE TABLE REGISTRATION
(
  R_ID INT IDENTITY(1,1) PRIMARY KEY,
  R_USERNAME NVARCHAR(25) NOT NULL,
  R_PASSWORD NVARCHAR(25) NOT NULL,
  R_EMAIL NVARCHAR(100) NOT NULL,
  R_PHONE INT,
  R_F_NAME NVARCHAR(25) NOT NULL,
  R_L_NAME NVARCHAR(25) NOT NULL,
  
  UNIQUE (R_USERNAME),
  UNIQUE (R_EMAIL)

);
GO

CREATE TABLE TICKET
(
  T_ID INT IDENTITY(1,1) PRIMARY KEY,
  T_PRIORITY NVARCHAR(25) NOT NULL,
  T_CATEGORY NVARCHAR(50) NOT NULL,
  T_DESCRIPTION NVARCHAR(4000) NOT NULL,
  T_STATUS BIT NULL,
  T_S_TIME DATETIME NOT NULL DEFAULT GETDATE(),
  T_DURATION BIGINT  DEFAULT 0,
  T_EMP_ID INT NOT NULL DEFAULT 0,
  T_ASSIGNED_EMP_ID INT DEFAULT 0,
  FOREIGN KEY (T_EMP_ID) REFERENCES EMPLOYEE(EMP_ID)
  ON DELETE SET DEFAULT
  ON UPDATE CASCADE
);
GO

CREATE TABLE COMP_POLICY
(
  COMP_POLICY_ID INT IDENTITY(1,1) PRIMARY KEY,
  COMP_POLICY_TEXT NVARCHAR(MAX) NOT NULL
)
GO
--------------------------------------------------------------------------------
-- Create Procedures
--------------------------------------------------------------------------------
CREATE PROC ADD_FAQ @Question NVARCHAR(MAX), @Answer NVARCHAR(MAX) 
AS
BEGIN
    SET NOCOUNT ON
    INSERT INTO FAQ (FAQ_Q, FAQ_A) VALUES (@Question, @Answer)
END
GO

CREATE PROC RESET_FAQ
AS
BEGIN
  SET NOCOUNT ON
  DROP TABLE FAQ
  CREATE TABLE FAQ
  (
    FAQ_ID INT IDENTITY(1,1) PRIMARY KEY,
    FAQ_Q NVARCHAR(MAX) NOT NULL,
    FAQ_A NVARCHAR(MAX) NOT NULL,
  );
END
GO

CREATE PROC EMP_LOG_IN @username NVARCHAR(MAX), @password NVARCHAR(MAX)
AS
BEGIN
  SET NOCOUNT ON
  SELECT *
  FROM EMPLOYEE
  WHERE EMP_USERNAME = "'"+@username+"'" AND EMP_PASSWORD = "'"+@password+"'"
        -- TODO check if "'" is working
END
GO

CREATE PROC EMP_REGISTER @username NVARCHAR(MAX), @password NVARCHAR(MAX), 
    @phone NVARCHAR(MAX), @f_name NVARCHAR(MAX), @l_name NVARCHAR(MAX)
AS
BEGIN
  SET NOCOUNT ON
  INSERT INTO REGISTRATION (R_USERNAME,R_PASSWORD,R_PHONE,R_EMAIL,R_F_NAME,R_L_NAME)
  VALUES (@username, @password, @phone, @f_name, @l_name)
END
GO

CREATE PROC CREATE_REPORT
AS 
BEGIN
  SET NOCOUNT ON
  SELECT  T_ID, T_PRIORITY, T_CATEGORY, T_DESCRIPTION, T_STATUS, T_S_TIME, 
          T_DURATION, E1.EMP_USERNAME, E2.EMP_USERNAME
	FROM    TICKET, EMPLOYEE E1, EMPLOYEE E2
  WHERE   TICKET.T_EMP_ID = E1.EMP_ID AND T_STATUS = 1 AND 
          TICKET.T_ASSIGNED_EMP_ID = E2.EMP_ID 
END
GO

CREATE PROC CONFIRM_REGISTRATION @R_userID INT
AS
BEGIN
  SET NOCOUNT ON
	BEGIN TRANSACTION 
				INSERT INTO EMPLOYEE (EMP_USERNAME, EMP_PASSWORD, EMP_EMAIL, EMP_PHONE, EMP_F_NAME, EMP_L_NAME)
        SELECT R_USERNAME, R_PASSWORD, R_EMAIL, R_PHONE, R_F_NAME, R_L_NAME
				FROM REGISTRATION 
        WHERE R_ID = @R_userID
				
        DELETE FROM REGISTRATION
        WHERE R_ID = @R_userID
	COMMIT
END
GO

CREATE PROC get_Unresolved_Tickets
AS
BEGIN
  SET NOCOUNT ON
  SELECT  T_ID, T_PRIORITY, T_CATEGORY, T_DESCRIPTION,
				  T_STATUS, T_S_TIME, T_DURATION, EMP_USERNAME, T_ASSIGNED_EMP_ID
  FROM TICKET, EMPLOYEE
  WHERE TICKET.T_EMP_ID = EMPLOYEE.EMP_ID AND (T_STATUS IS NULL OR T_STATUS = 0)
END
GO